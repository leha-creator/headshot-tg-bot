import {Telegraf} from "telegraf";
import {IBotContext} from "../context/context.interface";
import {model} from "mongoose";
import {Action} from "./action.class";
import {ActionSchema} from "../Models/Action.model";
import {ConfigService} from "../config/configService";
import {UserSchema} from "../Models/User.model";

const configService = ConfigService.getInstance();

export class ActionWin25Action extends Action {
    constructor(bot: Telegraf<IBotContext>) {
        super(bot);
    }

    handle(): void {
        this.bot.action('actionwin25', async (ctx: any) => {
            ctx.reply('–ê–∫—Ü–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å, –Ω–æ —Ö–∞–ª—è–≤–∞ ‚Äî –Ω–µ—Ç! üéÅ \n' +
                '\n' +
                '–û—Å—Ç–∞–≤–∞–π—Å—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑–¥–∞—á–∏!');
        });
    }
}

